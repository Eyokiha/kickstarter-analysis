Foo Bots is a web-based game which allows players to program a virtual robot and engage in combat with other robots. Each "bot" can utilize a variety of sensors to navigate the environment and find enemy bots, and a variety of weapons to try and destroy them. Bots are completely pre-programmed before each battle begins using a sophisticated language based on PHP. Bot programs can be edited and tweaked as much as desired between battles, but once a battle begins the bot is completely on its own. The program must evaluate sensory input, control movements, fire weapons, and ultimately destroy the opposing bot, all without human interaction. Foo Bots allows programmers to pit their skills against other programmers in direct one-on-one clashes. It is also an excellent environment for teaching elements of programming as well as concepts of robotic control systems and artificial intelligence. Successful bot management requires foresight, attention to detail, and the ability to debug and refine based on observed results. A testbase website currently exists at http://www.foobots.net/ for demonstration purposes. Please note that it is not meant to be a finished website at this point. Players will have many choices to make in constructing and managing their bots, such as what weapons to install, whom to challenge for a match or what tournament to enter, and what strategy to employ during each battle. Various weapons and ammunitions will be available, with varying costs. Players will have a certain allowance of game credits and can earn more by winning matches. Players must choose munitions wisely based on match strategy and current budget. The playing field may contain various obstacles such as buildings, and their location may change from match to match. Some playing fields may also contain special areas such as charging stations or command posts, for use in matches with special objectives. Besides destroying the opposing bot(s) other battle objectives may include collecting rewards, capturing a flag, or occupying strategic points. When the match begins each bot's actions will be determined solely by its internal control program, which can direct the bot to move about the field, read input from sensors, and fire any installed weapons. If a bot is hit by a weapon (even its own in certain cases) damage is calculated according to weapon type, distance, and any other applicable factors. Damage to certain areas of a bot may affect related functions, e.g. a bot with a damaged canon may no longer be able to fire canon shells. Once damage exceeds a certain amount, a bot is considered destroyed. Team play will also be added at a later date, most likely with team sizes of 2 and 4 bots. Teams may be comprised of multiple bots by the same player, or bots belonging to different players. Obviously the strategy of a team match will be quite different and will require a strong element of cooperation between bot teammates. During a team match bots will be equipped with communications nodes allowing them to exchange simple messages with one another (e.g. "He's over here!"). Each battle can be viewed in 3D from a variety of camera angles. While viewing the battle the player can pause, rewind, or "slow-mo" any portion of interest. This allows the player to debug the bot's behavior and make adjustments to the control program as needed. A log window is also available which documents important events during the battle such as firing a weapon or taking damage, so the player easily jump to the most critical parts of the battle. For an example of a battle replay and the viewing controls, please see http://www.foobots.net/replay.php Bots are programmed using a customized version of the extremely popular PHP language, which has several benefits. Experienced programmers will be able to jump right in with no learning curve. Beginners will be able to easily find tutorials and sample code for just about any desired task and use them directly in their bot's code. And it enhances the game's usefulness as a teaching tool, since time spent learning to program a bot is also time spent learning one of the most desirable IT/webmaster skills. In fact, Foo Bots could potentially be used as part of a complete PHP programming course. Here is an example of a trivial bot control program: For more info on bot programming, please see the tentative documentation page at http://www.foobots.net/fhp_doc_over.php As you can see, the "back end" framework for the game is mostly complete. The functionality to program the robots, place them onto the playing field, and run them against each other is all completed and working properly. This constitutes the real "hard part" of the project in the technical sense. Believe me, it has taken lots of time and effort to get the game engine to this point. But it's only the beginning in terms of getting to a finished and fully playable game. The remaining work will primarily consist of: Artwork and design. Creating the 3D models for bots, buildings, shells, missiles, etc. is quite time-consuming. It often takes a lot of trial-and-error to get pieces to look just right. This will likely be an ongoing endeavor even after the game is officially online and operating. Gameplay design and refinement. This includes weapons, sensors, playing field design, time limits, etc. used during matches. It also includes methods of acquiring weapons, rewards for winning battles, combat divisions, ranking systems, monetary credits, and other features of play between matches. To help finalize these design items, the project will undergo a beta period during which players will have extensive input on game features. While I have plenty of ideas already in mind to try out, I believe player feedback in the initial phases will be critical to the success of the game. I will be soliciting lots of opinions as the design process continues in order to make the best possible player experience. Thank you!