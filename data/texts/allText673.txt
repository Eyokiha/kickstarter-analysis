UPDATE: If you want more than one product, please sum all chosen reward amounts in one. We will sort all pledges in a survey once the project is backed.Look, someone is talking about mono: TECH UPDATE Behold; Our Mono prototype PCB design We have been working hard on designing our first mono prototype, complete with all I/O and sensors, and we are really excited to be able to share it with you. It is truly a great feeling when your hand soldered custom PCB awakes and runs the first few lines of code. We hooked up LPC-link2 to the the JTAG/SWD pads on the board - and it worked like a charm!The first Mono prototype is our attempt of catching early mistakes and to force ourselves to consider issues like power consumption, bootloader, signal integrity, etc. We expect to create multiple iterations of the prototype PCB, as we develop Mono. If you look at the component layout graphics, you see how we managed to pack all these components together on a very small area. (And this is only our first iteration!) At the moment we have defined most of the components, but we are not yet absolutely certain that the MCU will be NXP LPC1765. We are, especially, searching for the right Wifi-module, that is low-cost, low-power and has integrated Wifi/TCP/IP stack. We love the TI CC3100 modules, but prices and availability will determine if that module is feasible. We also put a big effort into getting the best display. Many 2.2” displays do not have a vsync or tearing output. These are necessary to create animations in the screen. We have searched hard and long after these small displays with tearing output, but so far no luck. That has led us into talks with vendors about creating our own custom display for Mono! At the moment we are have good prospects of delivering Mono with a custom display that enables animations, and as you can imagine we feel mighty good about that. Calling makers: Are you also tired of spaghetti wiring and stranded projects? Do you need a platform to quickly test and share your ideas? Are you an Arduino or Rasperry Pi buff, who wants the same accessibility, but in a beautiful casing? A warm welcome to our newest classmate: Mono - The first open programmable gadget in a handy case. Mono (referring to monotasking in case you were wondering) is a compact and inexpensive development device with long battery life, wifi, bluetooth and sensors. Mono is open source, supports the Arduino IDE and has an extendable hardware interface.Mono sits comfortably between the too dumb single-purpose devices, such as alarm clocks and weather stations, currently occupying your home, and the smart devices, that are too big or expensive for certain tasks. Philips Hue is great, but sometimes using your phone to control them can be clumsy. The Mono HueRemote task is one-click control of your lights. Just like the old-fashioned wall switch. Have the forecast instantly displayed with the Weather task. It's available out-of-the-box, for every internet enabled Mono. Mono positions itself between too smart and too dumb. Whether you're a superhero hacker, an ingenious maker or a tech-savvy first mover sporting the newest gadgets, Mono is for you - but; which one are you? Quickly test ideas or download our ready-made MonoTasks and use Mono right after unpacking, connecting it within a few clicks. Skip the time consuming process of building your own devices and quickly test your ideas on Mono. Mono also works well for tasks in your home We all know the feeling of peeking into the drawer of broken dreams and dust-covered creations that never saw the light of day. Fear no more arguments with your spouse over bird's nests of wires in the living room and avoid stranded projects ending up in the drawer. Mono is a beatiful, compact, open source and Arduino compatible development platform where all the basics have been taken care of - leaving the fun parts to you! Use the Mono SDK to create a stunning UI or an online web server in a few API calls. With Mono's powerful processor, touch-display, card-reader and long battery-life, as well as several wireless options, built-in sensors and extensions, you are able to quickly test ideas, and create applications ready for real life. You can also download our ready-made MonoTasks and use Mono right after unpacking, connecting it within a few clicks. Yes, we will make complete schematics and source-code available on GitHub as soon as we have a frozen design and working code. There might be closed firmware in the Wifi and BLE module. In the mean-time, watch this matrix-worthy rotating explosion animation for more awesomeness. You'll need an HTML5 capable browser to see this content. Play Replay with sound Play with sound 00:00 00:00 Our animation is not enough for you? Here is a breakdown of the technical specifications. We included all your favorite IO and made Mono Arduino-compatible and super accessible through the Mono SDK. MonoKiosk is Mono's online platform for sharing your creative projects integrated with GitHub. Earn your street-cred in the online maker communities, by uploading your own designs and tutorials and downloading tasks for Mono created by your peers. Share your creations with fellow makers and first movers on MonoKiosk - the online platform for Monotasks integrated with GitHub With Mono's built-in accelerometer you can measure the absolute velocity and acceleration. When you receive Mono you can plug it in and use it from the get-go. Monokiosk.com will take-off with a bunch of tasks that we create, based on your ideas! And we cannot wait to see your own creations.Our planned suite of Monotasks include: Weather: Display online weather data for today and tomorrow Agenda: Synchronized calendar feed Accelerate: Sense, monitor and record Mono’s movement Alarm Clock: Let Mono wake you up in the morning or use it as a timer Chronos: A beautiful wall or wristwatch Temperature: Monitor ambient temperature and get notifications on your phone Hue Remote: One-click control of your Philips Hue lights Next Ride: Display the next train or bus arriving at your closest station or bus stop​ We know that your personal allowance for Kickstarter purchases has likely broken through the roof this month alone, so we have a bunch of super competitive reward prices: 20% below expected retail price!If you want more than one product, just add up the amounts to one total in your pledge. Mono Pledges All Mono Kickstarter prices are 20% below the expected retail price. There are 4 different models of Mono, but which one is right for you? This chart will make your choice a walk in the park. We know what you want: a double rainbow that almost starts to look like a triple rainbow! Make sure to buy as many Monos as you can carry and tell your friends! If we manage to pull off around USD 400K, you can choose between a number amazing colors for Mono. At around USD 800K we will all get capacitive touch screens - let's get there together! The Mono API is written in C++ and is extremely easy and flexible to use. The API also includes a full-featured Arduino compatibility layer, that enables you to use the popular and easy Arduino IDE. Arduino Compatibility - How?Arduino has made programming electronics incredibly easy. To ease the learning curve in programming Mono we embrace the standard Arduino library and programming tools. By making Mono Arduino compatible we specifically mean: You can use the standard Arduino IDE to upload programs to Mono The well-known Arduino API is available inside the Mono framework Using the Arduino Shield Adaptor, Mono is pin compatible with Arduino Uno The API overview is sketched below. The software stack is built on the mbed framework, and uses this for system initialization and low-level I/O. The mbed framework is a very strong foundation and it has great scalability, making it perfect as the basis of the Mono API. API Overview Built-in SensorsThe API contains classes to get sensor data from the many integrated sensors in Mono. The data can be delivered as a constant flow, using events or callback functions, or it can be retrieved through polling. The first two methods are particularly useful when you need a fixed sample rate of sensor data. Hardware button inputs are part of this event-based API. The Mono API for sensors doesn't include communicating directly to underlying analog pin input, communication or PWM controllers on the CPU. For this, you must use either the mbed I/O classes or the Arduino interface.Internet and WirelessSeveral Mono models come with built-in Wi-Fi or/and Bluetooth connectivity. Because of the limited flash memory and resources of a Cortex MCU we choose to offload all handling of wireless protocols, TCP/IP, DNS and even HTTP to the co-processors of the wireless modules. The internet and wireless configuration API’s will abstract this communication away, and frees up the main CPU from the heavy tasks of decoding TCP packages etc.Because many internet based services like IFTTT.com and Philips Hue uses HTTP calls we will have a strong emphasis on parsing HTTP requests and JSON objects in the API. The API classes will include powerful methods to decode and encode JSON objects and send different HTTP request such as GET, PUT and POST. Hardware ArchitectureMono is based on a single PCB where the MCU, display and all other peripherals are mounted. There are 2 connectors available for hardware extensions: 3.5 mm jack and a custom fine pitched 50-pin connector.Power and BatteryMono is powered by the USB port and by the integrated Lithium-Ion battery. When connected to a USB host, the device is powered and the battery is charged using the 5V in the USB.The power circuits contain DC/DC converters to charge the battery (5V → 3.7V), and protect against overcharging. Similar the power supply circuit has two converters (3.7V → 3.3V) delivering power to the board, including the display backlight LEDs.The 3.5 mm jack connectorMaking your own accessories for Mono matters very much for us. Therefore we have selected the standard 3.5 mm jack connector with 4 terminals, for a number of reasons: It is small, durable, available and pretty - compared to other connectors. The 4 terminals in the 3.5 mm jack connector, will contain the following signals: GND I/O 2(Digital/I2C/Analog) I/O 1 (Digital/I2C/Analog) Power / Digital I/O Mono’s 3.5mm jack provide both digital and analog I/O, but also power. You can configure the connectors I/O pins in software, making the use of the connector extremely flexible.The Expansion ConnectorThe expansion connector is a fine pitched 50-pin connector. It is hidden inside the plastic casing by default. You expose it by removing a small area of the plastic, guided by recess lines in the back panel. When the connector is exposed it can be used together with our Arduino Shield Adaptor or you can build your own custom hardware. The connector contains all the signals found in the standard Arduino Uno pinout.We will provide a complete diagram of all the signals in the connector, as soon as our design is frozen. Add 120kr(approx. 20USD) to your pledge to receive the Arduino Shield Adaptor By supporting Mono your pledge is in good hands. Around half of your pledge covers the components needed to create your own Mono. The other half covers minor salaries for the team, the tooling costs needed to create the shells and custom-built displays, as well as prototypes and certifications among other expenses.You will be investing in a growing platform of aesthetic and functional electronic gadgets that help the creations of makers become usable in the real world. You will experience a growing number of applications, particularly within home automation, health and education. And you will support a dedicated team, who love programmable electronics and whose burning aim is to empower creative people to make their ideas real. Right now we have a working prototype of mono with custom PCB. Below is a timeline over the project, from April where it all started, until delivery in May 2015. Mono is created by Monolit ApS; a start-up based in Copenhagen, Denmark. Our interest in this project stems from a deep passion for programmable electronics, and an urge to solve problems in a hectic and cluttered everyday life. We want to encourage creativity and to create intelligent solutions for everyday problems.We are a team of 7 danes all passionate about tech and consumer electronics with years of experience in relevant fields. Our backbone is our four engineers with hardware, software and design engineering specialization. We topped this up with three business, marketing and social media wizzkids, so we know how to make things real.Besides being a very versatile team with different skill-sets and backgrounds, monoLit is part of an accelerator program called Danish Tech Challenge, at the Technical University of Denmark – which helps hardware start-ups like us, with development and mentoring. We are assigned a team of dedicated mentors who will help us in our process. The Mono team consists of: Lasse Hansen – Electronic Engineering - I brew beer! Kristoffer Andersen – Software Engineering - I like to play guitar! Ulrik Mansfeldt – Design Engineering - I also like to play guitar! Giang Le – App development - I like to draw cats! Emil Hjorth – Marketing - I only eat fruit! ... like Steve Jobs. Simon Villaume – PR & Marketing - I don't like to play guitar Line Thamawat - Social Media - Does anyone know the WiFi password? Risks and challenges Development: While the Mono team is highly experienced with integrated electronic product development, complications in hardware and mechanical components, as well as software development, delays and bugs may occur. Suppliers: As we are building the first batch of Mono devices we are at risk of experiencing issues with supplier errors, delays, quality and faulty components. We are minimizing the risk by using well known suppliers that we previously have worked with. Budget: Unforeseen expenses related to development, production, certification and shipping of products may occur. However, your Kickstarter pledge will not be altered during the post-campaign execution. Certifications: We cannot guarantee that the product is certified in accordance with local restrictions of all countries in which Mono is shipped to. However, the only critical components; the Bluetooth and WiFi modules are certified in accordance with FCC / CE / IC / KCC / MIC. Learn about accountability on Kickstarter